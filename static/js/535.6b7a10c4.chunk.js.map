{"version":3,"file":"static/js/535.6b7a10c4.chunk.js","mappings":"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","sources":["components/MovieDetailsBasic/MovieDetailsBasic.styled.js","components/MovieDetailsBasic/MovieDetailsBasic.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const InfoWrapper = styled.section`\n    display: flex;\n    gap: 16px;\n    padding-bottom: 8px;\n    margin-bottom: 8px;\n`;\n\nexport const MovieInfo = styled.div`\n    /* padding-left: 8px; */\n`;\n\nexport const Title = styled.h2`\n    color: blueviolet;\n`;\n\nexport const SubTitle = styled.h3`\n    margin-top: 8px;\n`;\n\nexport const Text = styled.p`\n    margin-top: 4px;\n`;\n\nexport const Nav = styled.nav`\n    display: flex;\n    align-items: center;\n    gap: ${p => p.theme.spaces[4]}px;\n    padding: 8px;\n`;\n\nexport const Link = styled(NavLink)`\n    padding: ${p => p.theme.spaces[3]}px;\n    border-radius: 4px;\n    font-weight: ${p => p.theme.fontWeights.medium};\n    color: navy;\n    text-decoration: none;\n\n    &.active {\n        background-color: #dddddd;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: orangered;\n    }\n`;\n\nexport const Img = styled.img`\n    width: 185px;\n`;","import PropTypes from 'prop-types';\nimport { POSTER_CONFIG } from \"services/Api\";\nimport defaultPoster from \"default-movie-768x1129.jpg\";\nimport { InfoWrapper, MovieInfo, Title, SubTitle, Text, Img } from \"./MovieDetailsBasic.styled\";\n\n// const POSTER_CONFIG = {\n//     baseUrl: \"http://image.tmdb.org/t/p/\",\n//     posterSizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\n// };\n\nconst MovieDetailsBasic = ({ movie }) => {\n  \n  const {\n    poster_path: poster,\n    title,\n    release_date: date,\n    vote_average: vote,\n    overview,\n    genres,\n  } = movie;\n\n  const moviePoster = poster\n    ? POSTER_CONFIG.baseUrl\n      .concat(POSTER_CONFIG.posterSizes[2], poster)\n    : defaultPoster;\n  \n  const movieTitle = `${title} (${new Date(date).getFullYear()})`;\n  const movieScore = `${Math.round(vote * 10)}%`;\n  const movieGenresList = genres.map(\n      ({ name }) => name).join(', ');\n\n\n  return (\n    <InfoWrapper>\n      <Img src={moviePoster} alt=\"\" />\n      <MovieInfo>\n        <Title>{movieTitle}</Title>\n        <Text>User Score: {movieScore}</Text>\n        {overview &&\n          (<>\n            <SubTitle>Overview</SubTitle>\n            <Text>{overview}</Text>\n          </>)}\n        {!!genres.length &&\n          (<>\n            <SubTitle>Genres</SubTitle>\n            <Text>{movieGenresList}</Text>\n          </>)}\n      </MovieInfo>\n    </InfoWrapper>\n  );\n};\n\nMovieDetailsBasic.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetailsBasic;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const BackLink = styled(NavLink)`\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n\n    margin-bottom: 8px;\n    padding: 8px 12px;\n\n    border: 1px solid #dddddd;\n    border-radius: 4px;\n    outline: none;\n\n    color: navy;\n    background-color: #dddddd;\n    font-weight: ${p=>p.theme.fontWeights.medium};\n    text-decoration: none;\n\n    :hover {\n        border: 1px solid #cccccc;\n\n        color: orangered;\n        background-color: white;\n    };\n`;\n\nexport const AddInfoWrapper = styled.section`\n    padding-top: 8px;\n    border-top: 1px solid #cccccc;\n`;\n\nexport const SubTitle = styled.h3`\n    margin-top: 8px;\n`;\n\nexport const Nav = styled.nav`\n    display: flex;\n    align-items: center;\n    gap: ${p => p.theme.spaces[4]}px;\n    padding: 8px;\n`;\n\nexport const Link = styled(NavLink)`\n    padding: ${p => p.theme.spaces[3]}px;\n    border-radius: 4px;\n    font-weight: ${p => p.theme.fontWeights.medium};\n    color: navy;\n    text-decoration: none;\n\n    &.active {\n        background-color: #dddddd;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: orangered;\n    }\n`;\n","import { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { BsArrowLeft } from 'react-icons/bs';\nimport MovieDetailsBasic from \"components/MovieDetailsBasic\";\nimport { getMovieById } from \"services/Api\";\nimport { BackLink, AddInfoWrapper, SubTitle, Nav, Link } from \"./MovieDetails.styled\";\nimport { ProgressBar } from  'react-loader-spinner'\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n\n    const { movieId } = useParams();\n    const location = useLocation();\n    \n    useEffect(() => {\n        getMovieById(movieId).then(data => setMovie(data));\n    }, [movieId]);\n    \n    if (!movie) {\n        return (\n            <ProgressBar\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"progress-bar-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"progress-bar-wrapper\"\n                borderColor='navy'\n                barColor='orangered'\n            />\n        );\n    };\n\n    return (\n        <main>\n            <BackLink to={location.state.from}>{<BsArrowLeft />}go back...</BackLink>\n            \n            <MovieDetailsBasic movie={movie} />\n\n            <AddInfoWrapper>\n                <SubTitle>Additional information</SubTitle>\n                <Nav>\n                    <Link to=\"cast\" state={{ from: location.state.from }}>Cast</Link>\n                    <Link to=\"reviews\" state={{ from: location.state.from }}>Reviews</Link>\n                </Nav>\n            </AddInfoWrapper>\n\n            <Suspense fallback={\n                <ProgressBar\n                    height=\"80\"\n                    width=\"80\"\n                    ariaLabel=\"progress-bar-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"progress-bar-wrapper\"\n                    borderColor='navy'\n                    barColor='orangered'\n                />\n            }>\n                <Outlet />\n            </Suspense>\n        </main>\n    );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'b282a22ae665f5f17a32a077013d243c';\n\nexport const POSTER_CONFIG = {\n    baseUrl: \"http://image.tmdb.org/t/p/\",\n    posterSizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\n};\n\nconst getMovies = async ({ queryType, pathParams, query }) => {\n    const config = {\n        baseURL: 'https://api.themoviedb.org/3', \n        params: {\n            api_key: API_KEY,\n            query\n        }\n    };\n    \n    const { data } = await axios.get(`${queryType}${pathParams}`, config);\n    return data;\n};\n\nexport const getTrends = () => {\n    const queryType = '/trending';\n\n    const mediaType = 'movie';\n    const timeWindow = 'week';\n\n    const pathParams = '/'.concat(mediaType, '/', timeWindow);\n\n    return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieById = id => {\n    const queryType = '/movie';\n    const pathParams = `/${id}`;\n\n    return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieByQuery = query => {\n    const queryType = '/search';\n    const pathParams = `/movie`;\n\n    return getMovies({ queryType, pathParams, query });\n\n};\n\nexport const getMovieCreditsById = id => {\n    const queryType = '/movie';\n    const pathParams = `/${id}/credits`;\n\n    return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieReviewsById = id => {\n    const queryType = '/movie';\n    const pathParams = `/${id}/reviews`;\n\n    return getMovies({ queryType, pathParams });\n};\n\nexport const getApiConfig = () => {\n    const pathParams = '';\n\n    return getMovies({ queryType: '/configuration', pathParams });\n};\n"],"names":["InfoWrapper","styled","MovieInfo","Title","SubTitle","Text","Img","p","theme","spaces","NavLink","fontWeights","medium","movie","poster","poster_path","title","date","release_date","vote","vote_average","overview","genres","moviePoster","POSTER_CONFIG","defaultPoster","movieTitle","Date","getFullYear","movieScore","Math","round","movieGenresList","map","name","join","src","alt","length","BackLink","AddInfoWrapper","Nav","Link","useState","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","then","data","to","state","from","Suspense","fallback","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","baseUrl","posterSizes","getMovies","queryType","pathParams","query","config","baseURL","params","api_key","axios","getTrends","concat","id","getMovieByQuery","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}